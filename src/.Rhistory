# Load Required Libraries
library(readxl)
library(oxcAAR)
library(rcarbon)
# Read 14C Dates
dates = read_xlsx('../c14dates3.xlsx')
dates[1,]
# Read 14C Dates
dates = read_xlsx('../C14dates_Iberia.xlsx')
# Read bespoke R functions
source('../src/oxcalScriptCreator.R')
dates$SiteID
dates$Site
# Fix Site ID
dates$SiteIDNew = paste0('S',as.numeric(as.factor(dates$Site)))
dates$SiteIDNew
dates
# Read 14C Dates
dates = as.data.frame(read_xlsx('../C14dates_Iberia.xlsx'))
# Read bespoke R functions
source('../src/oxcalScriptCreator.R')
# Fix Site ID
dates$SiteIDNew = paste0('S',as.numeric(as.factor(dates$Site)))
dates
edit(dates)
View(dates)
View(dates)
# Test Run with just three sites
test = subset(dates, SiteIDNew %in% c('S1','S2','S3'))
test
dates$LabNumber
anyDuplicated(dates$LabNumber)
dates$Material
dates$Context
dates$`?13C`
dates$Source
# Create OxCalScript
oxcalScriptGen(id=dates$LabNumber, c14age=dates$C14,errors=dates$STD,group=1:length(dates$C14),site=dates$SiteIDNew,fn='../oxcalscripts/samplescript.oxcal',interval=100,mcnsim=5000,mcname='testMCMC',model=c("uniform"))
dates$C14
test
test = subset(dates, SiteIDNew %in% c('S1','S2','S3'))
test
test$C14
test$C14 = as.numeric(test$C14)
test$STD = as.numeric(test$C14)
# Create OxCalScript
oxcalScriptGen(id=test$LabNumber, c14age=test$C14,errors=test$STD,group=1:length(test$C14),site=test$SiteIDNew,fn='../oxcalscripts/samplescript.oxcal',interval=100,mcnsim=5000,mcname='testMCMC',model=c("uniform"))
# Create OxCalScript
oxcalScriptGen(id=test$LabNumber, c14age=test$C14,errors=test$STD,site=test$SiteIDNew,fn='../oxcalscripts/samplescript.oxcal',interval=100,mcnsim=5000,mcname='testMCMC',model=c("uniform"))
# Create OxCalScript
oxcalScriptGen(id=test$LabNumber, c14age=test$C14,errors=test$STD,group=NULL,site=test$SiteIDNew,fn='../oxcalscripts/samplescript.oxcal',interval=100,mcnsim=5000,mcname='testMCMC',model=c("uniform"))
# Run OxCalScript Locally
quickSetupOxcal()
my_result_file <- executeOxcalScript('../oxcalscripts/samplescript.oxcal')
?executeOxcalScript
oxcalscript <- read_file('../oxcalscripts/samplescript.oxcal)
oxcalscript <- read_file('../oxcalscripts/samplescript.oxcal')
oxcalscript <- read_file('../oxcalscripts/samplescript.oxcal')
?read_file
library(readr)
library(readr)
oxcalscript <- read_file('../oxcalscripts/samplescript.oxcal')
result_file <- executeOxcalScript(oxcalscript)
# Read 14C Dates
# I noticed a couple of issues here:
# *SiteID does not seem to be actually a SiteID but an unique identified for each date.
# *
dates = as.data.frame(read_xlsx('../C14dates_Iberia.xlsx'))
dates$C14
dates$STD
test$C14
test$C14[1]
test$C14[2]
test$STD
test$STD = as.numeric(test$STD)
oxcalScriptGen(id=test$LabNumber, c14age=test$C14,errors=test$STD,group=NULL,site=test$SiteIDNew,fn='../oxcalscripts/samplescript.oxcal',interval=100,mcnsim=5000,mcname='testMCMC',model=c("uniform"))
# Load Required Libraries
library(readxl)
library(oxcAAR)
library(rcarbon)
library(readr)
# Read 14C Dates
# I noticed a couple of issues here:
# *SiteID does not seem to be actually a SiteID but an unique identified for each date.
# *The fields C14 and STD are read as text, and not as number. Theis seems to be because there are some hidden characters in various places. This should be cleaned, and stored in a proper format (i.e. CSV, not xlsx).
dates = as.data.frame(read_xlsx('../C14dates_Iberia.xlsx'))
# Read bespoke R functions
source('../src/oxcalScriptCreator.R')
# Fix Site ID
dates$SiteIDNew = paste0('S',as.numeric(as.factor(dates$Site)))
# Assign U
# Test Run with just three sites
test = subset(dates, SiteIDNew %in% c('S1','S2','S3'))
test$C14 = as.numeric(test$C14)
test$STD = as.numeric(test$STD)
# Create OxCalScript. The script below generates an oxcal script file (samplescript.oxcal) that can be copied on the browser for an online execution, or alternatively run locally.
# Notice that:
# The command can be run for each site (faster) or all sites together. The latter might be convenient but perhaps the former is easier for troubleshooting and identifyng instances of low agreement
# The argument group should be dedicated for instances where radiocarbon dates are from the same object, and hence when we expect the exact same date. Did not found anything relevant so left it blank.
oxcalScriptGen(id=test$LabNumber, c14age=test$C14,errors=test$STD,group=NULL,site=test$SiteIDNew,fn='../oxcalscripts/samplescript.oxcal',interval=100,mcnsim=5000,mcname='testMCMC',model=c("uniform"))
mcmcoutput=read.csv('../oxcalresults/testMCMC.csv')
mcmcoutput[1,]
mcmcoutput = mcmcoutput[,-ncol(mcmcoutput)]
mcmcoutput=read.csv('../oxcalresults/testMCMC.csv')
mcmcoutput = mcmcoutput[,-c(1,ncol(mcmcoutput))]
mcmcoutput[1,]
apply(mcmcoutput,1,BCADtoBP)
mcmcoutput$Start.S1
BCADtoBP(mcmcoutput$Start.S1)
BCADtoBP(mcmcoutput$End.S1)
BCADtoBP(mcmcoutput$Start.S2)
BCADtoBP(mcmcoutput$End.S2)
mcmcoutput$End.S2
range(mcmcoutput$End.S2)
BCADtoBP(1950)
apply(mcmcoutput,1,max)
which(apply(mcmcoutput,1,max)>1950)
mcmcoutput[13,]
mcmcoutput = mcmcoutput[-index,]
mcmcoutput=read.csv('../oxcalresults/testMCMC.csv')
mcmcoutput = mcmcoutput[,-c(1,ncol(mcmcoutput))] #Remove unused columns
index=which(apply(mcmcoutput,1,max)>1950) #identify instances with posterior outside calibration range
mcmcoutput = mcmcoutput[-index,]
mcmcoutput = apply(mcmcoutput,1,BCADtoBP)
mcmcoutput[1,]
mcmcoutput=read.csv('../oxcalresults/testMCMC.csv')
mcmcoutput = mcmcoutput[,-c(1,ncol(mcmcoutput))] #Remove unused columns
index=which(apply(mcmcoutput,1,max)>1950) #identify instances with posterior outside calibration range
mcmcoutput = mcmcoutput[-index,]
mcmcoutput = apply(mcmcoutput,2,BCADtoBP)
mcmcoutput[1,]
# Each row of mcmcoutput is a possible start and end date for each site.
randomrowiindex = sample(nrow(mcmcoutput),size=1)
# Each row of mcmcoutput is a possible start and end date for each site.
rindex = sample(nrow(mcmcoutput),size=1)
plot(0,0,type='l',xlim=range(mcmcoutput[rindex,]),ylim=c(0.5,3.5))
# Each row of mcmcoutput is a possible start and end date for each site.
rindex = sample(nrow(mcmcoutput),size=1)
plot(0,0,type='l',xlim=rev(range(mcmcoutput[rindex,])),ylim=c(0.5,3.5))
plot(0,0,type='l',xlim=rev(range(mcmcoutput[rindex,])),ylim=c(0.5,3.5),axes=FALSE)
plot(0,0,type='l',xlim=rev(range(mcmcoutput[rindex,])),ylim=c(0.5,3.5),axes=FALSE,xlab='cal BP',ylab='Sites')
axis(2,at=2,1:3,labels=unique(test$SiteIDNew))
unique(test$SiteIDNew)
axis(2,at=1:3,labels=unique(test$SiteIDNew))
lines(c(mcmcoutput[rindex,1:2]),c(1,1))
lines(c(mcmcoutput[rindex,1:2]),c(1,1),lwd=2)
lines(c(mcmcoutput[rindex,3:4]),c(2,2),lwd=2)
lines(c(mcmcoutput[rindex,5:6]),c(3,3),lwd=2)
rindex = sample(nrow(mcmcoutput),size=1)
plot(0,0,type='l',xlim=rev(range(mcmcoutput[rindex,])),ylim=c(0.5,3.5),axes=FALSE,xlab='cal BP',ylab='Sites')
axis(2,at=1:3,labels=unique(test$SiteIDNew))
lines(c(mcmcoutput[rindex,1:2]),c(1,1),lwd=2)
lines(c(mcmcoutput[rindex,3:4]),c(2,2),lwd=2)
lines(c(mcmcoutput[rindex,5:6]),c(3,3),lwd=2)
rindex = sample(nrow(mcmcoutput),size=1)
plot(0,0,type='l',xlim=rev(range(mcmcoutput[rindex,])),ylim=c(0.5,3.5),axes=FALSE,xlab='cal BP',ylab='Sites')
axis(2,at=1:3,labels=unique(test$SiteIDNew))
lines(c(mcmcoutput[rindex,1:2]),c(1,1),lwd=2)
lines(c(mcmcoutput[rindex,3:4]),c(2,2),lwd=2)
lines(c(mcmcoutput[rindex,5:6]),c(3,3),lwd=2)
rindex = sample(nrow(mcmcoutput),size=1)
plot(0,0,type='l',xlim=rev(range(mcmcoutput[rindex,])),ylim=c(0.5,3.5),axes=FALSE,xlab='cal BP',ylab='Sites')
axis(2,at=1:3,labels=unique(test$SiteIDNew))
lines(c(mcmcoutput[rindex,1:2]),c(1,1),lwd=2)
lines(c(mcmcoutput[rindex,3:4]),c(2,2),lwd=2)
lines(c(mcmcoutput[rindex,5:6]),c(3,3),lwd=2)
axis(1)
rindex
plot(0,0,type='l',xlim=rev(range(mcmcoutput[1,])),ylim=c(0.5,3.5),axes=FALSE,xlab='cal BP',ylab='Sites')
axis(2,at=1:3,labels=unique(test$SiteIDNew))
axis(1)
lines(c(mcmcoutput[1,1:2]),c(1,1),lwd=2)
lines(c(mcmcoutput[1,3:4]),c(2,2),lwd=2)
lines(c(mcmcoutput[1,5:6]),c(3,3),lwd=2)
plot(0,0,type='l',xlim=rev(range(mcmcoutput[1049,])),ylim=c(0.5,3.5),axes=FALSE,xlab='cal BP',ylab='Sites')
axis(2,at=1:3,labels=unique(test$SiteIDNew))
axis(1)
lines(c(mcmcoutput[1049,1:2]),c(1,1),lwd=2)
lines(c(mcmcoutput[1049,3:4]),c(2,2),lwd=2)
lines(c(mcmcoutput[1049,5:6]),c(3,3),lwd=2)
